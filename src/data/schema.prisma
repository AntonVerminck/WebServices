// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Screening {
  @@map("Screening")

  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  film_id     Int     @db.UnsignedInt
  naam       String   @db.VarChar(255)
  huisnummer Int      @db.UnsignedTinyInt
  postcode   Int      @db.UnsignedInt
  straat     String   @db.VarChar(255)
  datum  DateTime @db.DateTime(0)

  Film Film @relation(fields: [film_id], references: [id], map: "fk_screening_film")
}

model Film {
  @@map("films")

  id         Int         @id @default(autoincrement()) @db.UnsignedInt
  titel      String      @db.VarChar(255)
  regiseur   String      @db.VarChar(255)
  reviews      Review[]
  screenings Screening[]
}

model Review {
  id       Int           @id @default(autoincrement()) @db.UnsignedInt
  user_id  Int            @db.UnsignedInt
  film_id  Int             @db.UnsignedInt
  rating   Int             @db.UnsignedInt
  review_titel String      @db.VarChar(255)
  review_content String     @db.VarChar(255)
  user     User      @relation(fields: [user_id],onDelete: NoAction, onUpdate: NoAction , references: [id], map: "fk_userfilm_user")
  film     Film      @relation(fields: [film_id], onDelete: NoAction, onUpdate: NoAction,references: [id], map: "fk_userfilm_film")

  @@unique([user_id, film_id])  
  @@map("user_film")       // Table name in DB
}

model User {
  @@map("users")               // Set the table name to "users"

  id            Int            @id @default(autoincrement()) @db.UnsignedInt
  voornaam      String         @db.VarChar(255)
  achternaam    String         @db.VarChar(255)
  email         String         @unique(map: "idx_user_email_unique") @db.VarChar(255)
  password_hash String         @db.VarChar(255)
  roles         Json
  Reviews       Review[]
}